class Solution:
    def isBipartite(self, graph: List[List[int]]) -> bool:
        n = len(graph)
        sets = [0] * n
        
        for start_node in range(n):
            if sets[start_node] == 0:
                queue = deque()
                queue.append((start_node, 1))
                
                while queue:
                    node, c = queue.popleft()
                    if sets[node] != 0:
                        if sets[node] != c:
                            return False
                        continue
                    sets[node] = c
                    for neighbour in graph[node]:
                        queue.append((neighbour, -c))
                        
        return True
