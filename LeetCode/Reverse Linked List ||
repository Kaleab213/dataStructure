# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:

    def reverseBetween(self, head: Optional[ListNode], left: int, right: int) -> Optional[ListNode]:

        array = []
        while head:
            array.append(head.val)
            head = head.next
        for k in range(len(array)):
            if k == left-1:
                i = k
                j = right - 1
                while i <= j:
                    array[i], array[j] = array[j], array[i]
                    i += 1
                    j -= 1

        head = ListNode(array[0])
        dummy = head
        for i in range(1, len(array)):
            new_node = ListNode(array[i])
            head.next = new_node
            head = new_node
        return dummy
        


