from collections import Counter
class Solution:
    def wordSubsets(self, words1: List[str], words2: List[str]) -> List[str]:
        def count_characters(word):
            count = [0] * 26  # Count of characters (a-z)
            for char in word:
                count[ord(char) - ord('a')] += 1
            return count
        
        universal_strings = []
        max_char_counts = [0] * 26  # Maximum character counts in words2
        
        # Count the characters in words2
        for word in words2:
            char_counts = count_characters(word)
            for i in range(26):
                max_char_counts[i] = max(max_char_counts[i], char_counts[i])
        
        # Check if each word in words1 is universal
        for word in words1:
            char_counts = count_characters(word)
            is_universal = True
            
            for i in range(26):
                if char_counts[i] < max_char_counts[i]:
                    is_universal = False
                    break
            
            if is_universal:
                universal_strings.append(word)
        
        return universal_strings
